model {
    for(i in 1:N){
        #Measurement equation model
        for(j in 1:3){
            y[i,j]~dnorm(mu[i,j],1)I(low[z[i,j]+1],high[z[i,j]+1])
        }
        for(j in 4:P){
            z[i,j]~dbin(pb[i,j],1)
            pb[i,j]<-exp(mu[i,j])/(1+exp(mu[i,j]))
        }
        mu[i,1]<-uby[1]+eta[i]
        mu[i,2]<-uby[2]+lam[1]*eta[i]
        mu[i,3]<-uby[3]+lam[2]*eta[i]
        mu[i,4]<-uby[4]+xi[i,1]
        mu[i,5]<-uby[5]+lam[3]*xi[i,1]
        mu[i,6]<-uby[6]+lam[4]*xi[i,1]
        mu[i,7]<-uby[7]+xi[i,2]
        mu[i,8]<-uby[8]+lam[5]*xi[i,2]
        mu[i,9]<-uby[9]+lam[6]*xi[i,2]

        #Structural equation model
        xi[i,1:2]~dmnorm(zero2[1:2],phi[1:2,1:2])
        eta[i]~dnorm(etamu[i],psd)
        etamu[i]<-ubeta*c[i]+gam[1]*xi[i,1]+gam[2]*xi[i,2]
                  +gam[3]*xi[i,1]*xi[i,2]
    } #End of i

    for(i in 1:2){ zero2[i]<-0 }

    #Priors inputs for loadings and coefficients
    for (i in 1:P){ uby[i]~dnorm(1.0,4.0) }
    lam[1]~dnorm(0.7,4.0);   lam[2]~dnorm(0.7,4.0)
    lam[3]~dnorm(0.8,4.0);   lam[4]~dnorm(0.8,4.0)
    lam[5]~dnorm(0.7,4.0);   lam[6]~dnorm(0.7,4.0)
    ubeta~dnorm(0.8,4.0)

    var.gam<-4.0*psd
    gam[1]~dnorm(0.6,var.gam);   gam[2]~dnorm(0.6,var.gam)
    gam[3]~dnorm(0.8,var.gam)

    #Priors inputs for precisions
    psd~dgamma(9,3);    sgd<-1/psd
    phi[1:2,1:2]~dwish(R[1:2,1:2], 10)
    phx[1:2,1:2]<-inverse(phi[1:2,1:2])
} #end
