working.directory = iterpath,
debug = F)
# initial values for MCMC in WinBUGS
init1 <- list(
mu.y1 = rep(0.5, 17),
mu.y2 = rep(0.5, 17),
lam1 = rep(0.5, 13),
lam2 = rep(0.5, 13),
psi1 = rep(3, 17),
psi2 = rep(3, 17),
psd1 = 3,
psd2 = 3,
gam1 = rep(0.5, 3),
gam2 = rep(0.5, 3),
phi1 = matrix(c(5, 0, 0,
0, 5, 0,
0, 0, 5), nrow = 3),
phi2 = matrix(c(5, 0, 0,
0, 5, 0,
0, 0, 5), nrow = 3),
# b1 = rep(0.5, 5),
# b2 = rep(0.5, 5),
xi1 = matrix(rep(0.3, N1 * 3), ncol = 3),
xi2 = matrix(rep(0.3, N2 * 3), ncol = 3),
# y1 = matrix(rep(0, N1 * 11), ncol = 11),
# y2 = matrix(rep(0, N2 * 11), ncol = 11)
)
# initial values for MCMC in WinBUGS
init1 <- list(
mu.y1 = rep(0.5, 17),
mu.y2 = rep(0.5, 17),
lam1 = rep(0.5, 13),
lam2 = rep(0.5, 13),
psi1 = rep(3, 17),
psi2 = rep(3, 17),
psd1 = 3,
psd2 = 3,
gam1 = rep(0.5, 3),
gam2 = rep(0.5, 3),
phi1 = matrix(c(5, 0, 0,
0, 5, 0,
0, 0, 5), nrow = 3),
phi2 = matrix(c(5, 0, 0,
0, 5, 0,
0, 0, 5), nrow = 3),
# b1 = rep(0.5, 5),
# b2 = rep(0.5, 5),
xi1 = matrix(rep(0.3, N1 * 3), ncol = 3),
xi2 = matrix(rep(0.3, N2 * 3), ncol = 3)
# y1 = matrix(rep(0, N1 * 11), ncol = 11),
# y2 = matrix(rep(0, N2 * 11), ncol = 11)
)
inits = list(init1)
# set experiment path
iterpath = paste0(getwd(),"/m1_", timestamp)
dir.create(iterpath, showWarnings = FALSE, recursive = TRUE)
data <- list(N1 = N1, N2 = N2,
# P = P, r = r,
R = R0,
# d1 = D1, d2 = D2,
z1 = Z1, z2 = Z2,
thdpsych = thdpsych,
thdsleep = thdsleep)
model = bugs(data, inits, parameters,
model.file = paste0(getwd(),"/../model12.txt"),
n.chains = 1,
n.iter = 10,
n.burnin = 5,
n.thin = 1,
DIC = TRUE,
bugs.directory = winBUGS.path,
working.directory = iterpath,
debug = F)
model = bugs(data, inits, parameters,
model.file = paste0(getwd(),"/../model12.txt"),
n.chains = 1,
n.iter = 100,
n.burnin = 50,
n.thin = 1,
DIC = TRUE,
bugs.directory = winBUGS.path,
working.directory = iterpath,
debug = T)
# parameter to be estimate
parameters = c("mu.y1", "mu.y2", "lam1", "lam2",
"psi1", "psi2", "psd1", "psd2",
"gam1", "gam2", "phi1", "phi2",
"b1", "b2")
# initial values for MCMC in WinBUGS
init1 <- list(
mu.y1 = rep(0.5, 17),
mu.y2 = rep(0.5, 17),
lam1 = rep(0.5, 13),
lam2 = rep(0.5, 13),
psi1 = rep(3, 17),
psi2 = rep(3, 17),
psd1 = 3,
psd2 = 3,
gam1 = rep(0.5, 3),
gam2 = rep(0.5, 3),
phi1 = matrix(c(5, 0, 0,
0, 5, 0,
0, 0, 5), nrow = 3),
phi2 = matrix(c(5, 0, 0,
0, 5, 0,
0, 0, 5), nrow = 3),
b1 = rep(0.5, 5),
b2 = rep(0.5, 5),
xi1 = matrix(rep(0.3, N1 * 3), ncol = 3),
xi2 = matrix(rep(0.3, N2 * 3), ncol = 3)
# y1 = matrix(rep(0, N1 * 11), ncol = 11),
# y2 = matrix(rep(0, N2 * 11), ncol = 11)
)
inits = list(init1)
# set experiment path
iterpath = paste0(getwd(),"/m1_", timestamp)
dir.create(iterpath, showWarnings = FALSE, recursive = TRUE)
data <- list(N1 = N1, N2 = N2,
# P = P, r = r,
R = R0,
d1 = D1, d2 = D2,
z1 = Z1, z2 = Z2,
thdpsych = thdpsych,
thdsleep = thdsleep)
model = bugs(data, inits, parameters,
model.file = paste0(getwd(),"/../model12.txt"),
n.chains = 1,
n.iter = 100,
n.burnin = 50,
n.thin = 1,
DIC = TRUE,
bugs.directory = winBUGS.path,
working.directory = iterpath,
debug = T)
df = df.full[sample(nrow(df.full), 500),]
Z1 = as.matrix(df[df$g=="M",paste0("z",1:17)])
D1 = as.matrix(df[df$g=="M",paste0("d",1:5)])
Z2 = as.matrix(df[df$g=="F",paste0("z",1:17)])
D2 = as.matrix(df[df$g=="F",paste0("d",1:5)])
N1 = dim(Z1)[1]
N2 = dim(Z2)[1]
P = dim(Z1)[2]
r = dim(D1)[2]
thdpsych = matrix(rep(0,6*4), nrow = 6)
thdsleep = matrix(rep(0,5*6), nrow = 5)
for (j in 1:6) {
thdpsych[j,1] = -200
thdpsych[j,2] = min(200, qnorm(mean(Z1[,j]<2)))
thdpsych[j,3] = min(200, qnorm(mean(Z1[,j]<3)))
thdpsych[j,4] = 200
}
for (j in 1:5) {
thdsleep[j,1] = -200
thdsleep[j,2] = min(200, qnorm(mean(Z1[,j+6]<2)))
thdsleep[j,3] = min(200, qnorm(mean(Z1[,j+6]<3)))
thdsleep[j,4] = min(200, qnorm(mean(Z1[,j+6]<4)))
thdsleep[j,5] = min(200, qnorm(mean(Z1[,j+6]<5)))
thdsleep[j,6] = 200
}
R0 = matrix(c(
5, 2, 2,
2, 5, 2,
2, 2, 5
), nrow = 3)
# parameter to be estimate
parameters = c("mu.y1", "mu.y2", "lam1", "lam2",
"psi1", "psi2", "psd1", "psd2",
"gam1", "gam2", "phi1", "phi2")
# initial values for MCMC in WinBUGS
init1 <- list(
mu.y1 = rep(0.5, 17),
mu.y2 = rep(0.5, 17),
lam1 = rep(0.5, 13),
lam2 = rep(0.5, 13),
psi1 = rep(3, 17),
psi2 = rep(3, 17),
psd1 = 3,
psd2 = 3,
gam1 = rep(0.5, 3),
gam2 = rep(0.5, 3),
phi1 = matrix(c(5, 0, 0,
0, 5, 0,
0, 0, 5), nrow = 3),
phi2 = matrix(c(5, 0, 0,
0, 5, 0,
0, 0, 5), nrow = 3),
b1 = rep(0.5, 5),
b2 = rep(0.5, 5),
xi1 = matrix(rep(0.3, N1 * 3), ncol = 3),
xi2 = matrix(rep(0.3, N2 * 3), ncol = 3)
# y1 = matrix(rep(0, N1 * 11), ncol = 11),
# y2 = matrix(rep(0, N2 * 11), ncol = 11)
)
# initial values for MCMC in WinBUGS
init1 <- list(
mu.y1 = rep(0.5, 17),
mu.y2 = rep(0.5, 17),
lam1 = rep(0.5, 13),
lam2 = rep(0.5, 13),
psi1 = rep(3, 17),
psi2 = rep(3, 17),
psd1 = 3,
psd2 = 3,
gam1 = rep(0.5, 3),
gam2 = rep(0.5, 3),
phi1 = matrix(c(5, 0, 0,
0, 5, 0,
0, 0, 5), nrow = 3),
phi2 = matrix(c(5, 0, 0,
0, 5, 0,
0, 0, 5), nrow = 3),
# b1 = rep(0.5, 5),
# b2 = rep(0.5, 5),
xi1 = matrix(rep(0.3, N1 * 3), ncol = 3),
xi2 = matrix(rep(0.3, N2 * 3), ncol = 3)
# y1 = matrix(rep(0, N1 * 11), ncol = 11),
# y2 = matrix(rep(0, N2 * 11), ncol = 11)
)
inits = list(init1)
# set experiment path
iterpath = paste0(getwd(),"/m1_", timestamp)
dir.create(iterpath, showWarnings = FALSE, recursive = TRUE)
data <- list(N1 = N1, N2 = N2,
# P = P, r = r,
R = R0,
# d1 = D1, d2 = D2,
z1 = Z1, z2 = Z2,
thdpsych = thdpsych,
thdsleep = thdsleep)
model = bugs(data, inits, parameters,
model.file = paste0(getwd(),"/../model12.txt"),
n.chains = 1,
n.iter = 100,
n.burnin = 50,
n.thin = 1,
DIC = TRUE,
bugs.directory = winBUGS.path,
working.directory = iterpath,
debug = T)
df = df.full[sample(nrow(df.full), 2000),]
Z1 = as.matrix(df[df$g=="M",paste0("z",1:17)])
D1 = as.matrix(df[df$g=="M",paste0("d",1:5)])
Z2 = as.matrix(df[df$g=="F",paste0("z",1:17)])
D2 = as.matrix(df[df$g=="F",paste0("d",1:5)])
N1 = dim(Z1)[1]
N2 = dim(Z2)[1]
P = dim(Z1)[2]
r = dim(D1)[2]
thdpsych = matrix(rep(0,6*4), nrow = 6)
thdsleep = matrix(rep(0,5*6), nrow = 5)
for (j in 1:6) {
thdpsych[j,1] = -200
thdpsych[j,2] = min(200, qnorm(mean(Z1[,j]<2)))
thdpsych[j,3] = min(200, qnorm(mean(Z1[,j]<3)))
thdpsych[j,4] = 200
}
for (j in 1:5) {
thdsleep[j,1] = -200
thdsleep[j,2] = min(200, qnorm(mean(Z1[,j+6]<2)))
thdsleep[j,3] = min(200, qnorm(mean(Z1[,j+6]<3)))
thdsleep[j,4] = min(200, qnorm(mean(Z1[,j+6]<4)))
thdsleep[j,5] = min(200, qnorm(mean(Z1[,j+6]<5)))
thdsleep[j,6] = 200
}
R0 = matrix(c(
5, 2, 2,
2, 5, 2,
2, 2, 5
), nrow = 3)
# parameter to be estimate
parameters = c("mu.y1", "mu.y2", "lam1", "lam2",
"psi1", "psi2", "psd1", "psd2",
"gam1", "gam2", "phi1", "phi2")
# initial values for MCMC in WinBUGS
init1 <- list(
mu.y1 = rep(0.5, 17),
mu.y2 = rep(0.5, 17),
lam1 = rep(0.5, 13),
lam2 = rep(0.5, 13),
psi1 = rep(3, 17),
psi2 = rep(3, 17),
psd1 = 3,
psd2 = 3,
gam1 = rep(0.5, 3),
gam2 = rep(0.5, 3),
phi1 = matrix(c(5, 0, 0,
0, 5, 0,
0, 0, 5), nrow = 3),
phi2 = matrix(c(5, 0, 0,
0, 5, 0,
0, 0, 5), nrow = 3),
# b1 = rep(0.5, 5),
# b2 = rep(0.5, 5),
xi1 = matrix(rep(0.3, N1 * 3), ncol = 3),
xi2 = matrix(rep(0.3, N2 * 3), ncol = 3)
# y1 = matrix(rep(0, N1 * 11), ncol = 11),
# y2 = matrix(rep(0, N2 * 11), ncol = 11)
)
inits = list(init1)
# set experiment path
iterpath = paste0(getwd(),"/m1_", timestamp)
dir.create(iterpath, showWarnings = FALSE, recursive = TRUE)
data <- list(N1 = N1, N2 = N2,
# P = P, r = r,
R = R0,
# d1 = D1, d2 = D2,
z1 = Z1, z2 = Z2,
thdpsych = thdpsych,
thdsleep = thdsleep)
model = bugs(data, inits, parameters,
model.file = paste0(getwd(),"/../model12.txt"),
n.chains = 1,
n.iter = 2000,
n.burnin = 1000,
n.thin = 1,
DIC = TRUE,
bugs.directory = winBUGS.path,
working.directory = iterpath,
debug = T)
source("D:/OneDrive/OneDrive - sjtu.edu.cn/Records/CUHK/Course/STAT5020/codes/finalproj/run.R")
model$summary
save(model, file = paste0(iterpath,"/model.RData"))
library(R2WinBUGS)
setwd("D:/OneDrive/OneDrive - sjtu.edu.cn/Records/CUHK/Course/STAT5020/codes/finalproj")
timestamp = strftime(Sys.time(), "%Y%m%d-%H")
winBUGS.path = "D:/pkgs/winbugs14_full_patched/WinBUGS14"
set.seed(5020)
# prepare data
df.full = readRDS("abcd_sel.cleaned.onehot.Rds")
df = df.full
Z1 = as.matrix(df[df$g=="M",paste0("z",c(1:6,13:17))])
Z2 = as.matrix(df[df$g=="F",paste0("z",c(1:6,13:17))])
N1 = dim(Z1)[1]
N2 = dim(Z2)[1]
P = dim(Z1)[2]
thdpsych = matrix(rep(0,6*4), nrow = 6)
thdsleep = matrix(rep(0,5*6), nrow = 5)
for (j in 1:6) {
thdpsych[j,1] = -200
thdpsych[j,2] = min(200, qnorm(mean(Z1[,j]<2)))
thdpsych[j,3] = min(200, qnorm(mean(Z1[,j]<3)))
thdpsych[j,4] = 200
}
for (j in 1:5) {
thdsleep[j,1] = -200
thdsleep[j,2] = min(200, qnorm(mean(Z1[,j+6]<2)))
thdsleep[j,3] = min(200, qnorm(mean(Z1[,j+6]<3)))
thdsleep[j,4] = min(200, qnorm(mean(Z1[,j+6]<4)))
thdsleep[j,5] = min(200, qnorm(mean(Z1[,j+6]<5)))
thdsleep[j,6] = 200
}
R0 = matrix(c(
5, 2,
2, 5
), nrow = 2)
# parameter to be estimate
parameters = c("mu.y1", "mu.y2", "lam1", "lam2",
"psi1", "psi2", "psd1", "psd2",
"gam1", "gam2", "phi1", "phi2")
# initial values for MCMC in WinBUGS
init1 <- list(
mu.y1 = rep(0.5, 11),
mu.y2 = rep(0.5, 11),
lam1 = rep(0.5, 8),
lam2 = rep(0.5, 8),
psi1 = rep(3, 11),
psi2 = rep(3, 11),
psd1 = 3,
psd2 = 3,
gam1 = rep(0.5, 2),
gam2 = rep(0.5, 2),
phi1 = matrix(c(5, 0,
0, 5), nrow = 2),
phi2 = matrix(c(c(5, 0,
0, 5)), nrow = 2),
xi1 = matrix(rep(0.3, N1 * 2), ncol = 2),
xi2 = matrix(rep(0.3, N2 * 2), ncol = 2)
)
inits = list(init1)
source("D:/OneDrive/OneDrive - sjtu.edu.cn/Records/CUHK/Course/STAT5020/codes/finalproj/run_model1.R")
source("D:/OneDrive/OneDrive - sjtu.edu.cn/Records/CUHK/Course/STAT5020/codes/finalproj/run_model1.R")
source("D:/OneDrive/OneDrive - sjtu.edu.cn/Records/CUHK/Course/STAT5020/codes/finalproj/sim_model1.R")
df.full
View(df.full)
source("D:/OneDrive/OneDrive - sjtu.edu.cn/Records/CUHK/Course/STAT5020/codes/finalproj/sim_model1.R")
source("D:/OneDrive/OneDrive - sjtu.edu.cn/Records/CUHK/Course/STAT5020/codes/finalproj/sim_model1.R")
source("D:/OneDrive/OneDrive - sjtu.edu.cn/Records/CUHK/Course/STAT5020/codes/finalproj/sim_model1.R")
source("D:/OneDrive/OneDrive - sjtu.edu.cn/Records/CUHK/Course/STAT5020/codes/finalproj/sim_model1.R")
# prepare data
df.full = readRDS(paste0("simdata/simZ",t,".Rds"))
df = df.full
Z1 = as.matrix(df[df$g=="M",paste0("z",1:17)])
Z2 = as.matrix(df[df$g=="F",paste0("z",1:17)])
N1 = dim(Z1)[1]
N2 = dim(Z2)[1]
P = dim(Z1)[2]
thdpsych = readRDS(paste0("simdata/thda",t,".Rds"))
thdsleep = readRDS(paste0("simdata/thdb",t,".Rds"))
R0 = matrix(c(
5, 2, 2,
2, 5, 2,
2, 2, 5
), nrow = 3)
# parameter to be estimate
parameters = c("mu.y1", "mu.y2", "lam1", "lam2",
"sgm1", "sgm2", "sgd1", "sgd2",
"gam1", "gam2", "phx1", "phx2")
# initial values for MCMC in WinBUGS
init1 <- list(
mu.y1 = rep(0.5, 17),
mu.y2 = rep(0.5, 17),
lam1 = rep(0.5, 13),
lam2 = rep(0.5, 13),
psi1 = rep(0.3, 17),
psi2 = rep(0.3, 17),
psd1 = 0.5,
psd2 = 0.5,
gam1 = rep(0.5, 3),
gam2 = rep(0.5, 3),
phi1 = matrix(c(1, 0, 0,
0, 1, 0,
0, 0, 1), nrow = 3),
phi2 = matrix(c(1, 0, 0,
0, 1, 0,
0, 0, 1), nrow = 3),
xi1 = matrix(rep(0.3, N1 * 3), ncol = 3),
xi2 = matrix(rep(0.3, N2 * 3), ncol = 3)
)
init2 <- list(
mu.y1 = rep(-0.5, 17),
mu.y2 = rep(-0.5, 17),
lam1 = rep(-0.5, 13),
lam2 = rep(-0.5, 13),
psi1 = rep(3, 17),
psi2 = rep(3, 17),
psd1 = 2,
psd2 = 2,
gam1 = rep(-0.5, 3),
gam2 = rep(-0.5, 3),
phi1 = matrix(c(5, 0, 0,
0, 5, 0,
0, 0, 5), nrow = 3),
phi2 = matrix(c(5, 0, 0,
0, 5, 0,
0, 0, 5), nrow = 3),
xi1 = matrix(rep(-0.3, N1 * 3), ncol = 3),
xi2 = matrix(rep(-0.3, N2 * 3), ncol = 3)
)
inits = list(init1, init2)
# set experiment path
iterpath = paste0(getwd(),"/sim_model1_", t)
dir.create(iterpath, showWarnings = FALSE, recursive = TRUE)
data <- list(N1 = N1, N2 = N2,
R = R0,
z1 = Z1, z2 = Z2,
thdpsych = thdpsych,
thdsleep = thdsleep)
model = bugs(data, inits, parameters,
model.file = paste0(getwd(),"/../model1.txt"),
n.chains = 2,
n.iter = 10000,
n.burnin = 5000,
n.thin = 1,
DIC = TRUE,
bugs.directory = winBUGS.path,
working.directory = iterpath,
debug = FALSE)
model = bugs(data, inits, parameters,
model.file = paste0(getwd(),"/../model1.txt"),
n.chains = 2,
n.iter = 10000,
n.burnin = 5000,
n.thin = 2,
DIC = TRUE,
bugs.directory = winBUGS.path,
working.directory = iterpath,
debug = FALSE)
inits = list(init1)
data <- list(N1 = N1, N2 = N2,
R = R0,
z1 = Z1, z2 = Z2,
thdpsych = thdpsych,
thdsleep = thdsleep)
model = bugs(data, inits, parameters,
model.file = paste0(getwd(),"/../model1.txt"),
n.chains = 1,
n.iter = 10000,
n.burnin = 5000,
n.thin = 1,
DIC = TRUE,
bugs.directory = winBUGS.path,
working.directory = iterpath,
debug = FALSE)
View(thdpsych)
source("D:/OneDrive/OneDrive - sjtu.edu.cn/Records/CUHK/Course/STAT5020/codes/finalproj/sim_model1.R")
View(thdsleep)
source("D:/OneDrive/OneDrive - sjtu.edu.cn/Records/CUHK/Course/STAT5020/codes/finalproj/sim_model1.R")
source("D:/OneDrive/OneDrive - sjtu.edu.cn/Records/CUHK/Course/STAT5020/codes/finalproj/sim_model1.R")
typeof(thdpsych)
source("D:/OneDrive/OneDrive - sjtu.edu.cn/Records/CUHK/Course/STAT5020/codes/finalproj/sim_model1.R")
View(df)
source("D:/OneDrive/OneDrive - sjtu.edu.cn/Records/CUHK/Course/STAT5020/codes/finalproj/sim_model1.R")
source("D:/OneDrive/OneDrive - sjtu.edu.cn/Records/CUHK/Course/STAT5020/codes/finalproj/sim_model1.R")
dim(thdsleep)
source("D:/OneDrive/OneDrive - sjtu.edu.cn/Records/CUHK/Course/STAT5020/codes/finalproj/sim_model1.R")
help(bugs)
source("D:/OneDrive/OneDrive - sjtu.edu.cn/Records/CUHK/Course/STAT5020/codes/finalproj/sim_model1.R")
source("D:/OneDrive/OneDrive - sjtu.edu.cn/Records/CUHK/Course/STAT5020/codes/finalproj/sim_model1.R")
source("D:/OneDrive/OneDrive - sjtu.edu.cn/Records/CUHK/Course/STAT5020/codes/finalproj/sim_model1.R")
source("D:/OneDrive/OneDrive - sjtu.edu.cn/Records/CUHK/Course/STAT5020/codes/finalproj/sim_model1.R")
source("D:/OneDrive/OneDrive - sjtu.edu.cn/Records/CUHK/Course/STAT5020/codes/finalproj/sim_model1.R")
source("D:/OneDrive/OneDrive - sjtu.edu.cn/Records/CUHK/Course/STAT5020/codes/finalproj/sim_model1.R")
